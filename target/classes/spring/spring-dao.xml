<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
 	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
         http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
         http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
         http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd
         http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd">
	<!-- 配置整合Mybatis过程 -->

	<!-- 1、配置数据库相关参数 properties属性：${url}  -->
	<context:property-placeholder location="classpath:jdbc.properties"/>

	<!-- 2、数据库连接池 -->
	<bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
		<!-- 配置连接池属性 -->
		<property name="driverClass" value="${driver}" />
 		<property name="jdbcUrl" value="${url}" />
		<property name="user" value="${user}" />
		<property name="password" value="${password}" />
		<!-- c3p0私有属性 -->
		<property name="maxPoolSize" value="30" />	<!-- 默认是5 -->
		<property name="minPoolSize" value="10" />	<!-- 默认是3 -->
		<property name="autoCommitOnClose" value="false" />	<!-- 关闭连接时不自动提交  默认是false -->
		<property name="checkoutTimeout" value="1000" />	<!-- 获取连接超时次数。默认是0  这样就会无限等待 -->
		<property name="acquireRetryAttempts" value="2" />	<!-- 当获取连接失败重试次数 默认次数太多了 -->
	</bean>

	<!-- 3、配置SqlSessionFactory对象 -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<!-- 注入数据库连接池 -->
		<property name="dataSource" ref="dataSource"/>
		<!-- 配置mybatis全局配置文件：mybatis-config.xml  -->
		<property name="configLocation" value="classpath:mybatis-config.xml"/>
		<!-- 扫描entity包 使用别名com.huwl.entity.Seckill => Seckill -->
		<property name="typeAliasesPackage" value="com.wanglei.entity"/>
		<!-- 扫描sql配置文件：mapper需要的xml文件 -->
		<property name="mapperLocations" value="classpath:mapper/*.xml"/>
	</bean>

	<!-- 4、配置扫描Dao接口包，动态实现Dao接口，注入到Spring容器中 -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<!-- 注入sqlSessionFactory -->
		<property name="sqlSessionFactoryBeanName" value="sqlSessionFactory" />	<!-- 注意使用value 而不是ref -->
		<!-- 给出需要扫描Dao接口包 -->
		<property name="basePackage" value="com.wanglei.dao" />
	</bean>

	<!-- RedisDao -->
	<bean id="redisDao" class="com.wanglei.dao.cache.RedisDao">
		<constructor-arg index="0" value="localhost"></constructor-arg>
		<constructor-arg index="1" value="6379"></constructor-arg>
	</bean>

</beans>